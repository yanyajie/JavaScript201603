NODE其实是javascript语言服务器的运行环境(我们可以使用JS在NODE这个平台上编写后台程序)

1、模块
  核心模块:NODE天生自带的  http、url、fs...
  文件模块:自己写的
  第三方模块:别人写好的,我们引入进来用  ->npm包/模块的管理


2、NODE是一个基于事件驱动、异步I/O的服务器端JS环境

--------------------------------------------
想要发布自己的项目:
1、买一台服务器(云服务器 云存储空间),把我们的项目源码放在当前的这个服务器中,并且进行发布 ->外网IP地址
2、买一个域名(万网)
3、DNS解析:把我们的域名和服务器关联到一起 在解析的时候,把我们的域名和服务器的外网IP地址关联到一起
4、备案

当用户在浏览器输入一个网址后,到页面加载出来,经历了哪些操作：
http://www.zhufengpeixun.cn:80/  ->URL分为三部分:协议(HTTP/HTTPS/FTP)、域名(www.zhufengpeixun.cn)、端口号(80 0-65535之间,HTTP协议的默认端口号是80,HTTPS默认的端口号是443 ->如果你的端口号是默认的端口号,在输入URL地址的时候可以省略掉,如果不是默认的端口号必须加上)

1、输入域名后,首先到DNS服务器上通过输入的域名找到对应的外网IP
2、通过IP找到对应的服务器
3、通过对应的端口号找到对应的项目
4、请求下载对应的资源文件(资源文件中的内容),返回给浏览器,浏览器按照自己的引擎(渲染页面的机制就是引擎,谷歌V8引擎)进行渲染

->首先把index.html页面中的源码传输到浏览器中进行渲染
->如果遇到了CSS/JS/图片的新请求,和上述步骤一样,都要先找到IP->在找到服务器->在通过端口号找到对应的项目->把对应的文件找到->把文件中的内容获取到->通过传输协议(HTTP)把内容返回给客户端的浏览器,浏览器进行渲染
->如果遇到的是Ajax/JSONP请求的是数据,和我们上述操作的步骤基本上一模一样


如果我们自己用NODE写一套后台的话,需要做的事情
1、创建一个服务、设定一个端口号 ->把我们的项目在服务器中进行发布
2、接收客户端浏览器的请求，分析出需要请求的资源文件，然后在服务器上找到对应的资源文件，把资源文件中的内容读取出来，在返回给客户端浏览器进行加载和渲染  ->"前端路由"

-------------------------------------------------------------
服务器端:所有可以发布服务,并且让别人可以通过地址访问到,并且可以得到对应请求资源内容的,都可以称之为服务器端
客户端:所有可以发送一个请求,并且可以接收到请求内容的都可以称之为客户端


-----------------------------------------------
问号传参:
在一个URL地址后面增加一个?,在问号后面传递多个值,这种模式叫做“问号传参”
http://kbs.sports.qq.com/kbsweb/game.htm?mid=100002:2144&age=12&name=13






































